% Generated by roxygen2 (4.0.2): do not edit by hand
\name{polynomials}
\alias{polynomials}
\title{Calculate natural or orthogonal polynomial fits on open outlines}
\usage{
polynomials(coo, degree, ortho = TRUE)
}
\arguments{
\item{coo}{a matrix (or a list) of (x; y) coordinates}

\item{degree}{polynomial degree for the fit (the Intercept is also returned)}

\item{ortho}{logical wheter to fit orthogonal (if \code{TRUE}) or natural
polynomials}
}
\value{
a list with components:
\itemize{
 \item \code{coeff} the coefficients (includint the intercept)
 \item \code{ortho} whether orthogonal or natural polynomials were fitted
 \item \code{degree} degree of the fit (could be retrieved through \code{coeff} though)
 \item \code{baseline1} the first baseline point (so far the first point)
 \item \code{baseline2} the second baseline point (so far the last point)
 \item \code{r2} the r2 from the fit
 \item \code{mod} the raw lm model
}
}
\description{
Calculates natural or orthogonal polynomial coefficients,
through a linear model fit (see \link{lm}), from a matrix of (x; y) coordinates.
}
\note{
Orthogonal polynomials are sometimes called Legendre's polynomials.
}
\examples{
data(olea)
o <- olea[1]
op <- polynomials(o, degree=4)
op
# shape reconstruction
opi <- polynomials.i(op)
lines(opi, col='red')
# R2 for degree 1 to 10
r <- numeric()
for (i in 1:10) { r[i] <- polynomials(o, degree=i)$r2 }
plot(2:10, r[2:10], type='b', pch=20, col='red', main='R2 / degree')
}
\seealso{
\link{polynomials.i} and \link{rawPolynomials} and \link{orthoPolynomials} for methods
on \link{Opn} objects.
}
\keyword{Polynomials}

